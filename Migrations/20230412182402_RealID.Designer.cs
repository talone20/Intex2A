// <auto-generated />
using System;
using Intex2A.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Intex2A.Migrations
{
    [DbContext(typeof(dataContext))]
    [Migration("20230412182402_RealID")]
    partial class RealID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Intex2A.Models.PublicAnalysis", b =>
                {
                    b.Property<byte[]>("Analysisid")
                        .HasColumnName("analysisid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Analysistype")
                        .HasColumnName("analysistype")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Date")
                        .HasColumnName("date")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Doneby")
                        .HasColumnName("doneby")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.ToTable("public.analysis");
                });

            modelBuilder.Entity("Intex2A.Models.PublicAnalysisTextile", b =>
                {
                    b.Property<byte[]>("MainAnalysisid")
                        .HasColumnName("main$analysisid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.analysis_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicArtifactfagelgamousregister", b =>
                {
                    b.Property<byte[]>("Coordinateset")
                        .HasColumnName("coordinateset")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photographed")
                        .HasColumnName("photographed")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Registernum")
                        .HasColumnName("registernum")
                        .HasColumnType("BLOB");

                    b.ToTable("public.artifactfagelgamousregister");
                });

            modelBuilder.Entity("Intex2A.Models.PublicArtifactfagelgamousregisterBurialmain", b =>
                {
                    b.Property<byte[]>("MainArtifactfagelgamousregisterid")
                        .HasColumnName("main$artifactfagelgamousregisterid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainBurialmainid")
                        .HasColumnName("main$burialmainid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.artifactfagelgamousregister_burialmain");
                });

            modelBuilder.Entity("Intex2A.Models.PublicArtifactkomaushimregister", b =>
                {
                    b.Property<byte[]>("Currentlocation")
                        .HasColumnName("currentlocation")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Date")
                        .HasColumnName("date")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Dimensions")
                        .HasColumnName("dimensions")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Entrydate")
                        .HasColumnName("entrydate")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Excavatornum")
                        .HasColumnName("excavatornum")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Finder")
                        .HasColumnName("finder")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Material")
                        .HasColumnName("material")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Number")
                        .HasColumnName("number")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photos")
                        .HasColumnName("photos")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Position")
                        .HasColumnName("position")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Provenance")
                        .HasColumnName("provenance")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Qualityphotos")
                        .HasColumnName("qualityphotos")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Rehousedto")
                        .HasColumnName("rehousedto")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Remarks")
                        .HasColumnName("remarks")
                        .HasColumnType("BLOB");

                    b.ToTable("public.artifactkomaushimregister");
                });

            modelBuilder.Entity("Intex2A.Models.PublicArtifactkomaushimregisterBurialmain", b =>
                {
                    b.Property<byte[]>("MainArtifactkomaushimregisterid")
                        .HasColumnName("main$artifactkomaushimregisterid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainBurialmainid")
                        .HasColumnName("main$burialmainid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.artifactkomaushimregister_burialmain");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBiological", b =>
                {
                    b.Property<byte[]>("Bagnumber")
                        .HasColumnName("bagnumber")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Clusternumber")
                        .HasColumnName("clusternumber")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Date")
                        .HasColumnName("date")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Initials")
                        .HasColumnName("initials")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Previouslysampled")
                        .HasColumnName("previouslysampled")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Racknumber")
                        .HasColumnName("racknumber")
                        .HasColumnType("BLOB");

                    b.ToTable("public.biological");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBiologicalC14", b =>
                {
                    b.Property<byte[]>("MainBiologicalid")
                        .HasColumnName("main$biologicalid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainC14id")
                        .HasColumnName("main$c14id")
                        .HasColumnType("BLOB");

                    b.ToTable("public.biological_c14");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBodyanalysischart", b =>
                {
                    b.Property<byte[]>("CariesPeriodontalDisease")
                        .HasColumnName("caries_periodontal_disease")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Estimatestature")
                        .HasColumnName("estimatestature")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Femur")
                        .HasColumnName("femur")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Femurheaddiameter")
                        .HasColumnName("femurheaddiameter")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Femurlength")
                        .HasColumnName("femurlength")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Gonion")
                        .HasColumnName("gonion")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Humerus")
                        .HasColumnName("humerus")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Humerusheaddiameter")
                        .HasColumnName("humerusheaddiameter")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Humeruslength")
                        .HasColumnName("humeruslength")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Lambdoidsuture")
                        .HasColumnName("lambdoidsuture")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MedicalIpRamus")
                        .HasColumnName("medical_ip_ramus")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Notes")
                        .HasColumnName("notes")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Nuchalcrest")
                        .HasColumnName("nuchalcrest")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Observations")
                        .HasColumnName("observations")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Orbitedge")
                        .HasColumnName("orbitedge")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Osteophytosis")
                        .HasColumnName("osteophytosis")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Parietalblossing")
                        .HasColumnName("parietalblossing")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Perservationindex")
                        .HasColumnName("perservationindex")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Robust")
                        .HasColumnName("robust")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Sciaticnotch")
                        .HasColumnName("sciaticnotch")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Sphenooccipitalsynchondrosis")
                        .HasColumnName("sphenooccipitalsynchondrosis")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Squamossuture")
                        .HasColumnName("squamossuture")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Subpubicangle")
                        .HasColumnName("subpubicangle")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Supraorbitalridges")
                        .HasColumnName("supraorbitalridges")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Toothattrition")
                        .HasColumnName("toothattrition")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Tootheruptionageestimation")
                        .HasColumnName("tootheruptionageestimation")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Ventralarc")
                        .HasColumnName("ventralarc")
                        .HasColumnType("BLOB");

                    b.ToTable("public.bodyanalysischart");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBooks", b =>
                {
                    b.Property<byte[]>("Author")
                        .HasColumnName("author")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Link")
                        .HasColumnName("link")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Title")
                        .HasColumnName("title")
                        .HasColumnType("BLOB");

                    b.ToTable("public.books");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBurialmain", b =>
                {
                    b.Property<byte[]>("Adultsubadult")
                        .HasColumnName("adultsubadult")
                        .HasColumnType("BLOB");

                    b.Property<string>("Ageatdeath")
                        .HasColumnName("ageatdeath")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Area")
                        .HasColumnName("area")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Burialid")
                        .HasColumnName("burialid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Burialmaterials")
                        .HasColumnName("burialmaterials")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Burialnumber")
                        .HasColumnName("burialnumber")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Clusternumber")
                        .HasColumnName("clusternumber")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Dataexpertinitials")
                        .HasColumnName("dataexpertinitials")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Dateofexcavation")
                        .HasColumnName("dateofexcavation")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Depth")
                        .HasColumnName("depth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Eastwest")
                        .HasColumnName("eastwest")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Excavationrecorder")
                        .HasColumnName("excavationrecorder")
                        .HasColumnType("BLOB");

                    b.Property<string>("Facebundles")
                        .HasColumnName("facebundles")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Fieldbookexcavationyear")
                        .HasColumnName("fieldbookexcavationyear")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Fieldbookpage")
                        .HasColumnName("fieldbookpage")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Goods")
                        .HasColumnName("goods")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Hair")
                        .HasColumnName("hair")
                        .HasColumnType("BLOB");

                    b.Property<string>("Haircolor")
                        .HasColumnName("haircolor")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Headdirection")
                        .HasColumnName("headdirection")
                        .HasColumnType("BLOB");

                    b.Property<double>("Id")
                        .HasColumnName("id")
                        .HasColumnType("REAL");

                    b.Property<byte[]>("Length")
                        .HasColumnName("length")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Northsouth")
                        .HasColumnName("northsouth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photos")
                        .HasColumnName("photos")
                        .HasColumnType("BLOB");

                    b.Property<string>("Preservation")
                        .HasColumnName("preservation")
                        .HasColumnType("TEXT");

                    b.Property<double>("RealId")
                        .HasColumnType("REAL");

                    b.Property<byte[]>("Samplescollected")
                        .HasColumnName("samplescollected")
                        .HasColumnType("BLOB");

                    b.Property<string>("Sex")
                        .HasColumnName("sex")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Shaftnumber")
                        .HasColumnName("shaftnumber")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Southtofeet")
                        .HasColumnName("southtofeet")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Southtohead")
                        .HasColumnName("southtohead")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Squareeastwest")
                        .HasColumnName("squareeastwest")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Squarenorthsouth")
                        .HasColumnName("squarenorthsouth")
                        .HasColumnType("BLOB");

                    b.Property<string>("Text")
                        .HasColumnName("text")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Westtofeet")
                        .HasColumnName("westtofeet")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Westtohead")
                        .HasColumnName("westtohead")
                        .HasColumnType("BLOB");

                    b.Property<string>("Wrapping")
                        .HasColumnName("wrapping")
                        .HasColumnType("TEXT");

                    b.ToTable("public.burialmain");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBurialmainBiological", b =>
                {
                    b.Property<byte[]>("MainBiologicalid")
                        .HasColumnName("main$biologicalid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainBurialmainid")
                        .HasColumnName("main$burialmainid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.burialmain_biological");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBurialmainBodyanalysischart", b =>
                {
                    b.Property<byte[]>("MainBodyanalysischartid")
                        .HasColumnName("main$bodyanalysischartid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainBurialmainid")
                        .HasColumnName("main$burialmainid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.burialmain_bodyanalysischart");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBurialmainCranium", b =>
                {
                    b.Property<byte[]>("MainBurialmainid")
                        .HasColumnName("main$burialmainid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainCraniumid")
                        .HasColumnName("main$craniumid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.burialmain_cranium");
                });

            modelBuilder.Entity("Intex2A.Models.PublicBurialmainTextile", b =>
                {
                    b.Property<byte[]>("MainBurialmainid")
                        .HasColumnName("main$burialmainid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.burialmain_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicC14", b =>
                {
                    b.Property<byte[]>("Agebp")
                        .HasColumnName("agebp")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("C14lab")
                        .HasColumnName("c14lab")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Calendardate")
                        .HasColumnName("calendardate")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Calibrateddateavg")
                        .HasColumnName("calibrateddateavg")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Calibrateddatemax")
                        .HasColumnName("calibrateddatemax")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Calibrateddatemin")
                        .HasColumnName("calibrateddatemin")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Calibratedspan")
                        .HasColumnName("calibratedspan")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Category")
                        .HasColumnName("category")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Foci")
                        .HasColumnName("foci")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Location")
                        .HasColumnName("location")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Questions")
                        .HasColumnName("questions")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Rack")
                        .HasColumnName("rack")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Size")
                        .HasColumnName("size")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Tubenumber")
                        .HasColumnName("tubenumber")
                        .HasColumnType("BLOB");

                    b.ToTable("public.c14");
                });

            modelBuilder.Entity("Intex2A.Models.PublicColor", b =>
                {
                    b.Property<byte[]>("Colorid")
                        .HasColumnName("colorid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Value")
                        .HasColumnName("value")
                        .HasColumnType("BLOB");

                    b.ToTable("public.color");
                });

            modelBuilder.Entity("Intex2A.Models.PublicColorTextile", b =>
                {
                    b.Property<byte[]>("MainColorid")
                        .HasColumnName("main$colorid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.color_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicCranium", b =>
                {
                    b.Property<byte[]>("AlphaCore")
                        .HasColumnName("alpha_core")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("BasionBregmaHeight")
                        .HasColumnName("basion_bregma_height")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("BasionNasion")
                        .HasColumnName("basion_nasion")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("BasionProsthionLength")
                        .HasColumnName("basion_prosthion_length")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("BizygomaticDiameter")
                        .HasColumnName("bizygomatic_diameter")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("InterobitalBreadth")
                        .HasColumnName("interobital_breadth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("InterorbitalBreadth")
                        .HasColumnName("interorbital_breadth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("InterorbitalSubtense")
                        .HasColumnName("interorbital_subtense")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MaxNasalBreadth")
                        .HasColumnName("max_nasal_breadth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Maxcraniumbreadth")
                        .HasColumnName("maxcraniumbreadth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Maxcraniumlength")
                        .HasColumnName("maxcraniumlength")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MidOrbitalBreadth")
                        .HasColumnName("mid_orbital_breadth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MidOrbitalSubtense")
                        .HasColumnName("mid_orbital_subtense")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("NasionProsthionUpper")
                        .HasColumnName("nasion_prosthion_upper")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("NasoAlphaSubtense")
                        .HasColumnName("naso_alpha__subtense")
                        .HasColumnType("BLOB");

                    b.ToTable("public.cranium");
                });

            modelBuilder.Entity("Intex2A.Models.PublicDecoration", b =>
                {
                    b.Property<byte[]>("Decorationid")
                        .HasColumnName("decorationid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Value")
                        .HasColumnName("value")
                        .HasColumnType("BLOB");

                    b.ToTable("public.decoration");
                });

            modelBuilder.Entity("Intex2A.Models.PublicDecorationTextile", b =>
                {
                    b.Property<byte[]>("MainDecorationid")
                        .HasColumnName("main$decorationid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.decoration_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicDimension", b =>
                {
                    b.Property<byte[]>("Dimensionid")
                        .HasColumnName("dimensionid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Dimensiontype")
                        .HasColumnName("dimensiontype")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Value")
                        .HasColumnName("value")
                        .HasColumnType("BLOB");

                    b.ToTable("public.dimension");
                });

            modelBuilder.Entity("Intex2A.Models.PublicDimensionTextile", b =>
                {
                    b.Property<byte[]>("MainDimensionid")
                        .HasColumnName("main$dimensionid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.dimension_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicNewsarticle", b =>
                {
                    b.Property<byte[]>("Author")
                        .HasColumnName("author")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Title")
                        .HasColumnName("title")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Url")
                        .HasColumnName("url")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Urltoimage")
                        .HasColumnName("urltoimage")
                        .HasColumnType("BLOB");

                    b.ToTable("public.newsarticle");
                });

            modelBuilder.Entity("Intex2A.Models.PublicPhotodata", b =>
                {
                    b.Property<byte[]>("Date")
                        .HasColumnName("date")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Filename")
                        .HasColumnName("filename")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photodataid")
                        .HasColumnName("photodataid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Url")
                        .HasColumnName("url")
                        .HasColumnType("BLOB");

                    b.ToTable("public.photodata");
                });

            modelBuilder.Entity("Intex2A.Models.PublicPhotodataTextile", b =>
                {
                    b.Property<byte[]>("MainPhotodataid")
                        .HasColumnName("main$photodataid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.photodata_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicPhotoform", b =>
                {
                    b.Property<byte[]>("Area")
                        .HasColumnName("area")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Burialnumber")
                        .HasColumnName("burialnumber")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Eastwest")
                        .HasColumnName("eastwest")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Filename")
                        .HasColumnName("filename")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Northsouth")
                        .HasColumnName("northsouth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photodate")
                        .HasColumnName("photodate")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photographer")
                        .HasColumnName("photographer")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Squareeastwest")
                        .HasColumnName("squareeastwest")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Squarenorthsouth")
                        .HasColumnName("squarenorthsouth")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Tableassociation")
                        .HasColumnName("tableassociation")
                        .HasColumnType("BLOB");

                    b.ToTable("public.photoform");
                });

            modelBuilder.Entity("Intex2A.Models.PublicStructure", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Structureid")
                        .HasColumnName("structureid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Value")
                        .HasColumnName("value")
                        .HasColumnType("BLOB");

                    b.ToTable("public.structure");
                });

            modelBuilder.Entity("Intex2A.Models.PublicStructureTextile", b =>
                {
                    b.Property<byte[]>("MainStructureid")
                        .HasColumnName("main$structureid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.structure_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicTeammember", b =>
                {
                    b.Property<byte[]>("Bio")
                        .HasColumnName("bio")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Membername")
                        .HasColumnName("membername")
                        .HasColumnType("BLOB");

                    b.ToTable("public.teammember");
                });

            modelBuilder.Entity("Intex2A.Models.PublicTextile", b =>
                {
                    b.Property<byte[]>("Burialnumber")
                        .HasColumnName("burialnumber")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Description")
                        .HasColumnName("description")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Direction")
                        .HasColumnName("direction")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Estimatedperiod")
                        .HasColumnName("estimatedperiod")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Locale")
                        .HasColumnName("locale")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Photographeddate")
                        .HasColumnName("photographeddate")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Sampledate")
                        .HasColumnName("sampledate")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Textileid")
                        .HasColumnName("textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicTextilefunction", b =>
                {
                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Textilefunctionid")
                        .HasColumnName("textilefunctionid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Value")
                        .HasColumnName("value")
                        .HasColumnType("BLOB");

                    b.ToTable("public.textilefunction");
                });

            modelBuilder.Entity("Intex2A.Models.PublicTextilefunctionTextile", b =>
                {
                    b.Property<byte[]>("MainTextilefunctionid")
                        .HasColumnName("main$textilefunctionid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.textilefunction_textile");
                });

            modelBuilder.Entity("Intex2A.Models.PublicYarnmanipulation", b =>
                {
                    b.Property<byte[]>("Angle")
                        .HasColumnName("angle")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Component")
                        .HasColumnName("component")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Count")
                        .HasColumnName("count")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Direction")
                        .HasColumnName("direction")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Id")
                        .HasColumnName("id")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Manipulation")
                        .HasColumnName("manipulation")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Material")
                        .HasColumnName("material")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Ply")
                        .HasColumnName("ply")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Thickness")
                        .HasColumnName("thickness")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Yarnmanipulationid")
                        .HasColumnName("yarnmanipulationid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.yarnmanipulation");
                });

            modelBuilder.Entity("Intex2A.Models.PublicYarnmanipulationTextile", b =>
                {
                    b.Property<byte[]>("MainTextileid")
                        .HasColumnName("main$textileid")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("MainYarnmanipulationid")
                        .HasColumnName("main$yarnmanipulationid")
                        .HasColumnType("BLOB");

                    b.ToTable("public.yarnmanipulation_textile");
                });
#pragma warning restore 612, 618
        }
    }
}
